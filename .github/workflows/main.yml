name: CI/CD - Build and Deploy Docker Container

# Run this workflow on a push to the main branch
on:
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set environment variables used in the workflow
env:
  # The repository name is used for the Docker image name
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # -------------------------------------
  #  Job 1: Build and Push Docker Image
  # -------------------------------------
  build-and-push:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest

    # Grant permissions for the workflow to write to GitHub Packages (GHCR)
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # ---------------------------------
  #  Job 2: Deploy with Terraform
  # ---------------------------------

  deploy:
    name: Deploy to Docker Host via Terraform
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # ---- NEW STEP ----
      # This step connects the GitHub runner to your Tailscale network
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TS_AUTHKEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Create Docker Certs Directory
        run: mkdir -p ${{ runner.temp }}/docker-certs

      - name: Decode and write Docker CA cert
        run: echo "${{ secrets.DOCKER_CA_PEM }}" > ${{ runner.temp }}/docker-certs/ca.pem

      - name: Decode and write Docker client cert
        run: echo "${{ secrets.DOCKER_CERT_PEM }}" > ${{ runner.temp }}/docker-certs/cert.pem

      - name: Decode and write Docker client key
        run: echo "${{ secrets.DOCKER_KEY_PEM }}" > ${{ runner.temp }}/docker-certs/key.pem

      - name: Initialize Terraform
        id: init
        run: terraform init

      - name: Apply Terraform configuration
        id: apply
        run: |
          # The docker_host variable now uses your Tailscale machine name
          terraform apply -auto-approve \
            -var="docker_host=tcp://${{ secrets.DOCKER_HOST_IP }}:2376" \
            -var="docker_cert_path=${{ runner.temp }}/docker-certs" \
            -var="image_name=ghcr.io/${{ env.IMAGE_NAME }}" \
            -var="image_tag=${{ github.sha }}"